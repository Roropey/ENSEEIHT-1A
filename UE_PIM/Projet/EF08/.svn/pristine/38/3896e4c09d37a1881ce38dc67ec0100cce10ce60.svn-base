with Ada.Text_IO; use Ada.Text_IO;
with Flux_Binaire; use Flux_Binaire;

procedure Test_Flux_Binaire is

    procedure Tester_Initialiser is
    begin
        Initialiser (Flux);
    end Tester_Initialiser;


    procedure Tester_Est_Vide is
    begin
        Initialiser (Flux);
        pragma Assert (Est_Vide (Flux));
        Ajouter_Bit (Flux, 1);
        pragma Assert (not Est_Vide (Flux));
    end Tester_Est_Vide;


    procedure Tester_Taille is
    begin
        Initialiser (Flux);
        pragma Assert (Taille (Flux) = 0);
        Ajouter_Bit (Flux, 1);
        pragma Assert (Taille (Flux) = 1);
    end Tester_Taille;

    procedure Tester_L_Octet is
    begin
        Initialiser (Flux);
        Ajouter_Octet (Flux, 0);
        Ajouter_Octet (Flux, 1);
        Ajouter_Octet (Flux, 2);
        Ajouter_Octet (Flux, 3);
        pragma Assert (L_Octet (Flux, 0) = 0);
        pragma Assert (L_Octet (Flux, 1) = 1);
        pragma Assert (L_Octet (Flux, 2) = 2);
        pragma Assert (L_Octet (Flux, 3) = 3);
    end Tester_L_Octet;

    procedure Tester_Ajouter_Bit is
    begin
        Initialiser (Flux);
        Ajouter_Bit (Flux, 1);
        Ajouter_Bit (Flux, 1);
        Ajouter_Bit (Flux, 0);
        Ajouter_Bit (Flux, 1);
        Ajouter_Bit (Flux, 0);
        Ajouter_Bit (Flux, 1);
        Ajouter_Bit (Flux, 1);
        Ajouter_Bit (Flux, 0);
        -- 214 en binaire = 11010110
        pragma Assert (L_Octet (Flux, 0) = 214);
    end Tester_Ajouter_Bit;


    procedure Tester_Ajouter_Octet is
    begin
        Initialiser (Flux);
        Ajouter_Octet (Flux, 0);
        Ajouter_Octet (Flux, 1);
        Ajouter_Octet (Flux, 2);
        pragma Assert (L_Octet (Flux, 0) = 0);
        pragma Assert (L_Octet (Flux, 1) = 1);
        pragma Assert (L_Octet (Flux, 2) = 2);
        pragma Assert (Taille (Flux) = 3);
    end Tester_Ajouter_Octet;


    procedure Tester_Ajouter_Flux is
        Flux_deux : T_Flux_Binaire;
    begin
        Initialiser (Flux);
        Ajouter_Octet (Flux, 0);
        Ajouter_Octet (Flux, 1);

        Initialiser (Flux_deux);
        Ajouter_Octet (Flux, 2);
        Ajouter_Octet (Flux, 3);
        pragma Assert (L_Octet (Flux, 0) = 0);
        pragma Assert (L_Octet (Flux, 1) = 1);
        pragma Assert (L_Octet (Flux, 2) = 2);
        pragma Assert (L_Octet (Flux, 3) = 3);
        pragma Assert (Taille (Flux) = 4);

        pragma Assert (L_Octet (Flux_deux, 0) = 2);
        pragma Assert (L_Octet (Flux_deux, 1) = 3);
        pragma Assert (Taille (Flux_deux) = 2);
    end Tester_Ajouter_Flux;


    procedure Tester_Vider is
    begin
        Initialiser (Flux);
        Ajouter_Octet (Flux, 0);
        Ajouter_Octet (Flux, 1);
        Vider (Flux);
    end Tester_Vider;


    Flux : T_Flux_Binaire;

begin
    procedure Tester_Initialiser;
    procedure Tester_Est_Vide;
    procedure Tester_Taille;
    procedure Tester_L_Octet;
    procedure Tester_Ajouter_Bit;
    procedure Tester_Ajouter_Octet;
    procedure Tester_Ajouter_Flux;
    procedure Tester_Vider;

    Put_Line ("Fin des tests de Flux_Binaire : OK.");
end Test_Flux_Binaire;
