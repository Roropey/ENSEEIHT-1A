with Ada.Streams.Stream_IO; use Ada.Streams.Stream_IO;
with Ada.Text_IO; use Ada.Text_IO;
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;

with Flux_Binaire; use Flux_Binaire;
with Arbre; 


procedure Compresser is

    --Variables :
    subtype Intervalle_Ascii is T_Octet range T_Octet'First .. T_Octet'Last;
    Tableau_Frequences : array (Intervalle_Ascii) of Integer;

    Nom_Fichier : constant String := "exemple.txt";
    Fichier : Ada.Streams.Stream_IO.File_Type;
	Flux_Fichier : Stream_Access;

    Octet : T_Octet;
    
    package Arbre_Integer_Unbounded_String is
            new Arbre (T_Cle => Integer, T_Valeur => T_Octet);
    use Arbre_Integer_Unbounded_String;

    type T_Liste is array (1..256) of T_Arbre;
    
    type T_Tableau is record
        Taille : Integer;
        Tableau : T_Liste;
    end record;
    
    Liste_Char : T_Tableau;
    
    --Fonctions et procédures :
    procedure Initialiser_Frequences is
        
    begin
        for I in Intervalle_Ascii loop
            Tableau_Frequences (I) := 0;
        end loop;
    end Initialiser_Frequences;


    procedure Afficher_Frequences is
        
        function Le_Caractere (Octet : in T_Octet) return String is
            Caractere : Unbounded_String;
        begin
            case Octet is
                when 10 => Caractere := To_Unbounded_String ("'\n'");
                when others => Caractere := To_Unbounded_String (Character'Val(Octet)'Image);
            end case;

            return To_String (Caractere);
        end Le_Caractere;
        
    begin
        for I in Intervalle_Ascii loop
            if Tableau_Frequences (I) /= 0 then
                Put_Line (Le_Caractere (I) & ": " & Tableau_Frequences(I)'Image);
            end if;
        end loop;
    end Afficher_Frequences;
    
    
    procedure Initialiser_noeud(Indice : in Integer; Frequence : in Integer; Caractere: in T_Octet; Noeud_Gauche : in T_Arbre; Noeud_Droite : in T_Arbre; Liste : in out T_Tableau) is
    begin 
        Initialiser(Liste.Tableau(Indice));
        Enregistrer(Liste.Tableau(Indice),Frequence,Caractere,Noeud_Gauche,Noeud_Droite);
    end Initialiser_noeud;
    
                                
    procedure Creer_liste_noeud is
    
    begin
        for I in Intervalle_Ascii loop
            if Tableau_Frequences(I)/=0 then
                Liste_Char.Taille:=Liste_Char.Taille+1;
                Initialiser_noeud(Liste_Char.Taille,Tableau_Frequences(I),I,null,null,Liste_Char);
            end if;
        end loop;
        Liste_Char.Taille:=Liste_Char.Taille+1;
        Initialiser_noeud(Liste_Char.Taille,0,255,null,null,Liste_Char); --Marchera ptt pas le 255
    end Creer_liste_noeud;          
    
--Programme :    
begin
    -- Déterminer les fréquences des caractères du texte
    Initialiser_Frequences;

    Open (Fichier, In_File, Nom_Fichier);
    Flux_Fichier := Stream (Fichier);

	while not End_Of_File (Fichier) loop
        Octet := T_Octet'Input (Flux_Fichier);
        Tableau_Frequences (Octet) := Tableau_Frequences (Octet) + 1;
    end loop;

    Close (Fichier);

    Afficher_Frequences;
    
    -- Créer arbre
    Creer_liste_noeud;
    -- Déterminer les codes des caractères
    -- Encoder l’arbre de Huffman
    -- Encoder le fichier grâce à l’arbre
end Compresser;
